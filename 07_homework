###Cоздайте новый кластер PostgresSQL 14
     yc compute instance create \
          --name bda-5 \
          --hostname bda-5 \
          --cores 2 \
          --memory 4 \
          --create-boot-disk size=15G,type=network-hdd,image-folder-id=standard-images,image-family=ubuntu-2004-lts \
          --network-interface subnet-name=local-bda-64,nat-ip-version=ipv4 \
          --ssh-key ~/.ssh/yc_key.pub \

      apt update && sudo apt upgrade -y
        apt-get install wget sudo curl gnupg2 -y
        sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        apt -y update
        apt-get install postgresql-15 -y
        root@bda-4:/home/yc-user# sudo -u postgres pg_lsclusters
###Зайдите в созданный кластер под пользователем postgres
        sudo -u postgres psql
###Cоздайте новую базу данных testdb
        CREATE DATABASE testdb;
###Зайдите в созданную базу данных под пользователем postgres
        postgres=# \c testdb
        You are now connected to database "testdb" as user "postgres".
###Cоздайте новую схему testnm
        CREATE SCHEMA testnm;
        CREATE SCHEMA
###Cоздайте новую таблицу t1 с одной колонкой c1 типа integer
###вставьте строку со значением c1=1
        testdb=# CREATE TABLE t1(c1 integer);
        CREATE TABLE
        testdb=# INSERT INTO t1 values(1);
        INSERT 0 1
###Cоздайте новую роль readonly
        testdb=# CREATE role readonly;
        CREATE ROLE
###Дайте новой роли право на подключение к базе данных testdb
        testdb=# grant connect on DATABASE testdb TO readonly;
        GRANT
###Дайте новой роли право на использование схемы testnm
        testdb=# grant usage on SCHEMA testnm to readonly;
        GRANT
###Дайте новой роли право на select для всех таблиц схемы testnm
        testdb=# 
        GRANT
###Cоздайте пользователя testread с паролем test123
        testdb=# CREATE USER testread with password 'test123';
        CREATE ROLE
###Дайте роль readonly пользователю testread
        testdb=# grant readonly TO testread;
        GRANT ROLE
###Зайдите под пользователем testread в базу данных testdb
        psql -h 127.0.0.1 -U testread -d testdb -W
        Password: 
        psql (15.6 (Ubuntu 15.6-1.pgdg20.04+1))
        SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)
        Type "help" for help.

        testdb=>
###Cделайте select * from t1;
        select * from t1;
        ERROR:  permission denied for table t1
###Получилось? (могло если вы делали сами не по шпаргалке и не упустили один существенный момент про который позже)
        \dt
        List of relations
         Schema | Name | Type  |  Owner   
        --------+------+-------+----------
         public | t1   | table | postgres
        (1 row)
###Напишите что именно произошло в тексте домашнего задания
###У вас есть идеи почему? ведь права то дали?
###Посмотрите на список таблиц
###Подсказка в шпаргалке под пунктом 20
###почему так получилось с таблицей (если делали сами и без шпаргалки то может у вас все нормально)
    таблица создана в схеме public а права назначены на схему testnm
###Вернитесь в базу данных testdb под пользователем postgres
          testdb=> \q
          root@bda-5:/home/yc-user# sudo -u postgres psql
          psql (15.6 (Ubuntu 15.6-1.pgdg20.04+1))
          Type "help" for help.

          postgres=# \c testdb
          You are now connected to database "testdb" as user "postgres".
          testdb=# \dt
             List of relations
           Schema | Name | Type  |  Owner   
          --------+------+-------+----------
           public | t1   | table | postgres
          (1 row)

###Удалите таблицу t1
          testdb=# DROP TABLE t1;
          DROP TABLE
          
###Cоздайте ее заново но уже с явным указанием имени схемы testnm
          testdb=# CREATE TABLE testnm.t1(c1 integer);
          CREATE TABLE
###Вставьте строку со значением c1=1
          testdb=# INSERT INTO testnm.t1 values(1);
          INSERT 0 1
###Зайдите под пользователем testread в базу данных testdb
          postgres=# \c testdb testread
          Password for user testread: 
          You are now connected to database "testdb" as user "testread".
          testdb=> 
###Cделайте select * from testnm.t1;
###получилось?
###есть идеи почему? если нет - смотрите шпаргалку
###как сделать так чтобы такое больше не повторялось? если нет идей - смотрите шпаргалку
###сделайте select * from testnm.t1;
###получилось?
###есть идеи почему? если нет - смотрите шпаргалку
###сделайте select * from testnm.t1;
###получилось?
###ура!
          testdb=# show search_path 
          testdb-# ;
             search_path   
          -----------------
           "$user", public
          (1 row)

          testdb=# set search_path to testnm;
          SET
          testdb=# show search_path;
           search_path 
          -------------
           testnm
          (1 row)

          testdb=# \dt
             List of relations
           Schema | Name | Type  |  Owner   
          --------+------+-------+----------
           testnm | t1   | table | postgres
          (1 row)

          testdb=#  select * from testnm.t1;
           c1 
          ----
            1
          (1 row)

          testdb=# \c testdb testread      
          Password for user testread: 
          You are now connected to database "testdb" as user "testread".
          testdb=>  select * from testnm.t1;
          ERROR:  permission denied for table t1
          testdb=> show search_path 
          testdb-> ;
             search_path   
          -----------------
           "$user", public
          (1 row)

          testdb=> set searh_pa

          testdb=> set searh_pa

          testdb=> set search_path to testnm;
          SET
          testdb=>  select * from testnm.t1; 
          ERROR:  permission denied for table t1
          testdb=> show search_path ;
           search_path 
          -------------
           testnm
          (1 row)

          testdb=> \c testdb postgres;
          You are now connected to database "testdb" as user "postgres".
          testdb=# show search_path ;
   search_path   
-----------------
 "$user", public
(1 row)

testdb=# set search_path to testnm;
SET
testdb=# ALTER default privileges in SCHEMA testnm grant SELECT on TABLES to readonly;
ALTER DEFAULT PRIVILEGES
testdb=# \c testdb testread                                                           
Password for user testread: 
You are now connected to database "testdb" as user "testread".
testdb=> show search_path 
;
   search_path   
-----------------
 "$user", public
(1 row)

testdb=> set search_path to testnm;
SET
testdb=>  select * from testnm.t1;
ERROR:  permission denied for table t1
testdb=> show search_path 
;
 search_path 
-------------
 testnm
(1 row)

testdb=>  select * from t1;
ERROR:  permission denied for table t1
testdb=> \c testdb postgres;
You are now connected to database "testdb" as user "postgres".
testdb=# grant SELECT on all TABLES in SCHEMA testnm TO readonly;
GRANT
testdb=# \c testdb testread
Password for user testread: 
You are now connected to database "testdb" as user "testread".
testdb=> set search_path to testnm;
SET
testdb=>  select * from t1;
 c1 
----
  1
(1 row)

testdb=> 

##Теперь попробуйте выполнить команду create table t2(c1 integer); insert into t2 values (2);
          testdb=> create table t2(c1 integer);
          ERROR:  permission denied for schema testnm
          LINE 1: create table t2(c1 integer);
                     ^
          testdb=> insert into t2 values (2);
          ERROR:  relation "t2" does not exist
          LINE 1: insert into t2 values (2);
### А как так? нам же никто прав на создание таблиц и insert в них под ролью readonly?
    есть идеи как убрать эти права? если нет - смотрите шпаргалку
    если вы справились сами то расскажите что сделали и почему, если смотрели шпаргалку - объясните что сделали и почему выполнив указанные в ней команды
    теперь попробуйте выполнить команду create table t3(c1 integer); insert into t2 values (2);
###Расскажите что получилось и почему
В связи с тем что установлена 15 версия постгрес данная уязвимость в правах на базу public закрыты.

